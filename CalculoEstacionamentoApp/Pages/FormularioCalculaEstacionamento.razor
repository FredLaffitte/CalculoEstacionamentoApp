<EditForm Model="@Estacionamento" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label form="nome">Entre com o horário de entrada: (HH:MM)</label>
        <div>
            <InputText @bind-Value="Estacionamento.horaEntrada" class="form-control" />
            <ValidationMessage For="@(()=> Estacionamento.horaEntrada)" />
        </div>
    </div>

    <div class="form-group">
        <label form="nome">Entre com o horário de saída: (HH:MM)</label>
        <div>
            <InputText @bind-Value="Estacionamento.horaSaida" class="form-control" />
            <ValidationMessage For="@(()=> Estacionamento.horaSaida)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success">
        @ButtonTextSubmit
    </button>
    <button class="btn btn-danger"
            @onclick="@(()=> navigation.NavigateTo("/"))">
        @ButtonTextCancelar
    </button>

</EditForm>

@code {

    [Inject]
    public NavigationManager navigation { get; set; }

    [Inject]
    private HttpClient http { get; set; }

    [Parameter]
    public Estacionamento Estacionamento { get; set; }

    [Parameter]
    public string ButtonTextSubmit { get; set; } = "Calcular";

    [Parameter]
    public string ButtonTextCancelar { get; set; } = "Cancelar";

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

}
